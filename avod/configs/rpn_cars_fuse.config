# Example cars config
# For each experiment, copy this config and modify the copy

model_config {
    model_name: 'rpn_model'
    checkpoint_name: 'rpn_cars_fuse'

    input_config {
        pc_sample_pts: 16384
        pc_data_dim: 4
        
        pc_sample_pts_variance: 0.125
        pc_sample_pts_clip: 0.25
        
        img_dims_h: 360
        img_dims_w: 1200
        img_depth: 3
    }

    rpn_config {
        rpn_use_intensity_feature: True
        rpn_fusion_method: 'concat'
        rpn_fixed_num_proposal_nms: True
        
        rpn_train_pre_nms_size: 9000
        rpn_train_post_nms_size: 512
        rpn_train_nms_iou_thresh: 0.85
        rpn_test_pre_nms_size: 9000
        rpn_test_post_nms_size: 100
        rpn_test_nms_iou_thresh: 0.8

        rpn_xz_search_range: 3
        rpn_xz_bin_len: 0.5
        # in fraction of PI
        rpn_theta_search_range: 1.0
        rpn_theta_bin_num: 12
    }

    avod_config {
        avod_use_intensity_feature: True
        avod_proposal_roi_crop_size: 512
        avod_nms_size: 100
        avod_nms_iou_thresh: 0.01

        avod_xz_search_range: 1.5
        avod_xz_bin_len: 0.5
        # in fraction of PI
        avod_theta_search_range: 0.25
        avod_theta_bin_len: 10

        avod_pooling_context_length: 1.0
    }

    label_smoothing_epsilon: 0.001
    # To disable path drop, set both to 1.0
    path_drop_probabilities: [0.9, 0.9]
    train_on_all_samples: False
    eval_all_samples: False

    layers_config {
        pc_feature_extractor {
            pc_pointcnn {
                sampling: 'fps'
                with_X_transformation: True
                with_global: True
                sorting_method: ''
                xconv_layer { 
                  xconv_param: {
                    # [K, D, P, C, links]
                    param: [8, 1, -1, 256]
                  }
                }
                xconv_layer { 
                  xconv_param: {
                    param: [8, 1, 4096, 256]
                  }
                }
                xconv_layer { 
                  xconv_param: {
                    param: [8, 1, 1024, 512]
                  }
                }
                xconv_layer { 
                  xconv_param: {
                    param: [8, 1, 256, 1024]
                  }
                }
                xconv_layer { 
                  xconv_param: {
                    param: [8, 1, 64, 1024]
                  }
                }
          
                # XDConv layer [K, D, pts_layer_idx, qrs_layer_idx]
                xdconv_layer {
                  xdconv_param: [8, 1, 4, 4]
                }
                xdconv_layer {
                  xdconv_param: [8, 1, 4, 3]
                }
                xdconv_layer {
                  xdconv_param: [8, 1, 3, 2]
                }
                xdconv_layer {
                  xdconv_param: [8, 1, 2, 1]
                }
                xdconv_layer {
                  xdconv_param: [8, 1, 1, 0]
                }
                xdconv_layer {
                  xdconv_param: [8, 1, 0, 0]
                }

                # FCLayer [C, dropout_rate]
                fc_layer {
                    C: 256
                    dropout_rate: 0.5
                }
                fc_layer {
                    C: 256
                    dropout_rate: 0.5
                }
            }
        }
        
        img_feature_extractor {
            img_vgg_pyr {
                vgg_conv1: [2, 32]
                vgg_conv2: [2, 64]
                vgg_conv3: [3, 128]
                vgg_conv4: [3, 256]
                l2_weight_decay: 0.0005
            }
        }

        rpn_config {
            fc_layer {
                C: 512
                dropout_rate: 0.5
            }
            fc_layer {
                C: 512
                dropout_rate: 0.5
            }
        }
        avod_config {
            mlp {
                C: 256
                dropout_rate: 0.5
            }
            mlp {
                C: 256  # better equals to pc_pointcnn's last fc_layer's C 
                dropout_rate: 0.5
            }
            pc_feature_extractor {
                pc_pointcnn {
                    sampling: 'fps'
                    with_X_transformation: True
                    with_global: True
                    sorting_method: ''
                    # XConv layer [K, D, P, C, links]
                    xconv_layer {
                      xconv_param: {
                        param: [4, 1, -1, 512]
                      }
                    }
                    xconv_layer { 
                      xconv_param: {
                        param: [8, 1, 128, 512]
                      }
                    }
                    xconv_layer { 
                      xconv_param: {
                        param: [12, 1, 32, 1024]
                      }
                    }
                    xconv_layer {  
                      xconv_param: {
                        param: [12, 1, 8, 1024]
                      }
                    }
                }
            }
            fc_layer {
                C: 256
                dropout_rate: 0.5
            }
            fc_layer {
                C: 256
                dropout_rate: 0.5
            }
        }
    }

    # Loss function weights
    loss_config {
        seg_loss_weight: 100.0
        cls_loss_weight: 1.0
        reg_loss_weight: 1.0
        ang_loss_weight: 1.0
    }
}

train_config {

    batch_size: 2

    optimizer {
        adam_optimizer {
            learning_rate {
                exponential_decay_learning_rate {
                    initial_learning_rate: 0.002
                    decay_steps: 30000
                    decay_factor: 0.8
                }
            }
        }
    }

    overwrite_checkpoints: True

    max_checkpoints_to_keep: 1000
    max_iterations: 120000
    checkpoint_interval: 2000

    summary_interval: 10
    summary_histograms: True
    summary_img_images: False
    summary_pc_images: False

    allow_gpu_mem_growth: True
}

eval_config {
    batch_size: 1
    eval_interval: 2000
    eval_mode: 'val'
    ckpt_indices: 19
    evaluate_repeatedly: False

    allow_gpu_mem_growth: True
    kitti_score_threshold: 0.1
}

dataset_config {
    name: 'kitti'

    dataset_dir: '/workdir/ljh/datasets/Kitti/object'
    # data_split: 'train'

    data_split_dir: 'training'
    has_labels: True

    cluster_split: 'train'
    classes: ['Car']
    num_clusters: [1]

    aug_list: ['flipping', 'pca_jitter']
    aug_roi_method: 'multiple'

    kitti_utils_config {
        area_extents: [-40, 40, -5, 3, 0, 70]
        voxel_size: 0.1
        anchor_strides: [0.5, 0.5]

        label_seg_config {
            expand_gt_size: 0.2
        }
    }
    
    mini_batch_config {
        cls_iou_3d_thresholds {
             neg_iou_lo: 0.05   #CLS_BG_THRESH_LO
             neg_iou_hi: 0.45   #CLS_BG_THRESH
             pos_iou_lo: 0.60   #CLS_FG_THRESH
             pos_iou_hi: 1.0
        }
        reg_iou_3d_thresholds {
             neg_iou_lo: 0.0
             neg_iou_hi: 0.55
             pos_iou_lo: 0.55   #REG_FG_THRESH
             pos_iou_hi: 1.0
        }
        roi_per_sample: 64      
        fg_ratio: 0.5
        hard_bg_ratio: 0.8
    }
}
