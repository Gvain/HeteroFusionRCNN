package avod.protos;

// Message for configuring Model Layer params.
message LayersConfig {

    required FeatureExtractor pc_feature_extractor = 1;
    //required FeatureExtractor img_feature_extractor = 2;

    required RPNLayersConfig rpn_config = 3;
    required AVODLayersConfig avod_config = 4;
}

message FeatureExtractor {
    oneof feature_extractor {

        PointCNNLayersConfig pc_pointcnn = 1;
        VGGLayersConfig img_vgg = 2;

        PyramidLayersConfig img_vgg_pyr = 3;
        PyramidLayersConfig bev_vgg_pyr = 4;
    }
}

message FCLayer {
    required int32 C = 1;
    required float dropout_rate = 2;
}

message PointCNNLayersConfig {
    required string sampling = 1;
    required bool with_X_transformation = 2;
    required bool with_global = 3;
    optional string sorting_method = 4 [default = ''];

    // XConv layer [K, D, P, C, links]
    message XConvLayer {
      repeated int32 xconv_param = 1;
      repeated int32 links = 2;
    }
    repeated XConvLayer xconv_layer = 5;
    
    // XDConv layer [K, D, pts_layer_idx, qrs_layer_idx]
    message XDConvLayer {
      repeated int32 xdconv_param = 1;
    }
    repeated XDConvLayer xdconv_layer = 6;
    
    // FCLayer [channel, dropout_rate]
    repeated FCLayer fc_layer = 7;
}

message VGGLayersConfig {
    // Conv layer 1 [repeat, num filter]
    repeated int32 vgg_conv1 = 1;

    // Conv layer 2 [repeat, num filter]
    repeated int32 vgg_conv2 = 2;

    // Conv layer 3 [repeat, num filter]
    repeated int32 vgg_conv3 = 3;

    // Conv layer 4 [repeat, num filter]
    repeated int32 vgg_conv4 = 4;

    // Upsampling multiplier
    required int32 upsampling_multiplier = 5;

    // L2 norm weight decay
    optional float l2_weight_decay = 6 [default = 0.0005];
}

message PyramidLayersConfig {
    // Conv layer 1 [repeat, num filter]
    repeated int32 vgg_conv1 = 1;

    // Conv layer 2 [repeat, num filter]
    repeated int32 vgg_conv2 = 2;

    // Conv layer 3 [repeat, num filter]
    repeated int32 vgg_conv3 = 3;

    // Conv layer 4 [repeat, num filter]
    repeated int32 vgg_conv4 = 4;

    // L2 norm weight decay
    optional float l2_weight_decay = 6 [default = 0.0005];
}

message RPNLayersConfig {
    // FCLayer [channel, dropout_rate]
    repeated FCLayer fc_layer = 1;
}

message AVODLayersConfig{
    oneof fc_layers {
        BasicFcLayers basic_fc_layers = 1;
        FusionFcLayers fusion_fc_layers = 2;
    }
}

message BasicFcLayers {
    required int32 num_layers = 1;
    repeated int32 layer_sizes = 2;

    // L2 weight decay
    required float l2_weight_decay = 3;

    // Dropout keep probability
    required float keep_prob = 4;

    // Fusion method ('mean', 'concat')
    required string fusion_method = 5;
}

message FusionFcLayers {

    required int32 num_layers = 1;
    repeated int32 layer_sizes = 2;

    // L2 weight decay
    required float l2_weight_decay = 3;

    // Dropout keep probability
    required float keep_prob = 4;

    // Fusion method ('mean', 'concat')
    required string fusion_method = 5;

    // Fusion type (early, late, deep)
    required string fusion_type = 6;
}
